/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application simpleFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         1000;

deltaT          1;

writeControl    timeStep;

writeInterval   50;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

functions
(
    turboPerformance
    {
        type turboPerformance;
        functionObjectLibs ("libturboPerformance.so");
        inletPatches (inlet);           // inlet patches, can be multiple
        outletPatches (outlet);       // outlet patches, can be multiple
        patches (rotor);     // rotor/impeller patches, again can be multiple
        log true;                             // write data to screen (true/false)
        rhoInf 998.0;                    // density
        CofR (0 0 0);                      // center of rotation
        omega (0 0 62.8);        // Rotational velocity (rad/s)
        // pName  p;     //Optional: if p field is not called "p", give a new name here
        // Uname U;     //Optional: if U field is not called "U", give a new name here
        // phiName phi;  //Optional: if phi (flux) field is not called "phi", give a new name here
    }
    fluidPower
    {
        type fluidPower;
        functionObjectLibs ("libturboPerformance.so");
        inletPatches (inlet);            // note: these patch names have small caps only !
        outletPatches (outlet);
        log true;
        rhoInf 998.0;
    }
    forces
    {
        type forces;
        functionObjectLibs ("libturboPerformance.so");
        patches (rotor);     // rotor/impeller patches, again can be multiple
        log true;
        rhoInf 998.0;
        CofR (0 0 0);                      // center of rotation
    }
);

// ************************************************************************* //
